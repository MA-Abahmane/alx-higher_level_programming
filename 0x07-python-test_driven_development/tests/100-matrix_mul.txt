- Welcome to the '100-matrix_mul' testing ground

- This file containst test for the '100-matrix_mul' 
file to insure it work as expected in every given 
situation

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


Let start testing:


Test-1 normal mode:

    >>> a = [ [1, 2], [3, 4] ]
    >>> b = [ [1, 2], [3, 4] ]
    >>> matrix_mul(a, b)
    [[7, 10], [15, 22]]

    >>> a = [ [1, 2] ]
    >>> b = [ [3, 4], [5, 6] ]
    >>> matrix_mul(a, b)
    [[13, 16]]

    >>> a = [  [1, 2, 3] ]
    >>> b = [ [4, 5, 6], [7, 8, 9], [10, 11, 12] ]
    >>> matrix_mul(a, b)
    [[48, 54, 60]]



Test-2 whith float and negative digits:

    >>> a = [ [-1.01, -2.99], [3.2, -4.32] ]
    >>> b = [ [1.1, -2], [3, -4.55] ]
    >>> matrix_mul(a, b)
    [[-10.081000000000001, 15.6245], [-9.440000000000001, 13.255999999999998]]

    >>> a = [ [99.9, 9.99] ]
    >>> b = [ [-3.11, -4], [-5.00, -6.01] ]
    >>> matrix_mul(a, b)
    [[-360.639, -459.6399]]

    >>> a = [ [-1, -2, -3] ]
    >>> b = [ [-4, -5, -6], [-7, -8, -9], [-10, -11, -12] ]
    >>> matrix_mul(a, b)
    [[48, 54, 60]]



Test-3 m_a and m_b not a list:

    >>> a = [ [1, 2] ]
    >>> b = 'there'
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> a = (1, 2)
    >>> b = [ [3, 4] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> a = {1:2, 2:3}
    >>> b = 'yo'
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a must be a list



Test-4 m_a and m_b empty list:

    >>> a = []
    >>> b = []
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> a = [ [1, 2] ]
    >>> b = [ [] ] 
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> a = [ [] ]
    >>> b = [ [] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_a can't be empty



Test-5 m_a and m_b not a list of lists:

    >>> a = [ [1, 2] ]
    >>> b = [ 1, 2, 3 ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> a = [ [1, 2], [1, 2] ]
    >>> b = [ [1, 2], (3, 4) ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> a = [ (1, 2) ]
    >>> b = [ [1, 2] ] 
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists



Test-6 m_a and m_b must only contain int/floats:

    >>> a = [ [-1.01, -2.99], [3.2, -4.32] ]
    >>> b = [ [1.1, -2], [3, '-4.55'] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> a = [ [99.9, '9.99'] ]
    >>> b = [ [-3.11, -4], [-5.00, -6.01] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> a = [ [-1, -2, (1, 2)] ]
    >>> b = [ [-4, -5, -6], [-7, -8, -9], [-10, '-11', -12] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats



Test-7 all rows of m_a and m_b must be same size:

    >>> a = [ [-1.01, -2.99], [3.2, -4.32]]
    >>> b = [ [1.1, -2], [3, -4.55, 5] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

    >>> a = [ [-1, 2], [1]]
    >>> b = [ [1], [3] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> a = [ [-1.01], [3.2, -4.32]]
    >>> b = [ [1], [3, -4.55, 5] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size



Test-8 check if m_a and m_b can be multiplied:

    >>> a = [ [1, 2] ]
    >>> b = [ [1.1, -2] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

    >>> a = [ [1] ]
    >>> b = [ [1.1, -2], [1, 5] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

    >>> a = [ [1], [2] ]
    >>> b = [ [1], [2], [3] ]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied


Test-9 wrong input:

    >>> a = [ [1, 2] ]
    >>> b = None
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> a = None
    >>> b = None
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> a = [[1, 3]]
    >>> b = [[1, 2], [1, None]]
    >>> matrix_mul(a, b)
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> a = None
    >>> matrix_mul(a)
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> a = [[1, 3]]
    >>> b = [[1, 2], [1, 3]]
    >>> c = [[1, 54]]
    >>> matrix_mul(a, b, c)
    Traceback (most recent call last):
    TypeError: matrix_mul() takes 2 positional arguments but 3 were given