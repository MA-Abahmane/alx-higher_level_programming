- Welcome to the '0-add_integer' testing ground -

- This file containst test for the '0-add_integer' 
file to insure it work as expected in every given 
situation

    >>> add_integer = __import__('0-add_integer').add_integer


Let start testing:


Test-1 adding 2 integers:

    >>> add_integer(1, 2)
    3


Test-2 adding 2 floats:

    >>> add_integer(2,50, 2,50)
    4


Test-3 adding 2 NEGATIVE integers:

    >>> add_integer(-3, -4)
    -7


Test-4 adding 2 NEGATIVE floats:

    >>> add_integer(-5.50, -5.99)
    -10


Test-5 sending in 1 digit:

    >>> add_integer(2)
    100


Test-6 adding negative and positive:

    >>> add_integer(-10, 5)
    5


Test-7 sending in a string and digit:

    >>> add_integer("1", 1)
    Traceback (most recent call last):
    TypeError: a must be an integer


Test-8 sending in a digit and string:

    >>> add_integer(2, "2")
    Traceback (most recent call last):
    TypeError: b must be an integer


Test-9 sending in 2 strings:

    >>> add_integer("3", "-3")
    Traceback (most recent call last):
    TypeError: a must be an integer


test-10 sending in a Null:

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer


test-11 sending in a digit and Null:

    >>> add_integer(1, None)
    Traceback (most recent call last):
    TypeError: b must be an integer


test-12 sending in a digit and Null:

    >>> add_integer(None, 2)
    Traceback (most recent call last):
    TypeError: a must be an integer


Test-13 sending in a string:

    >>> add_integer("Hello")
    Traceback (most recent call last):
    TypeError: a must be an integer


test-14 sending in nothing:

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'


test-15 sending in more than 2 digits:

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given