- Welcome to the '101-lazy_matrix_mul' testing ground

- This file containst test for the '101-lazy_matrix_mul' 
file to insure it work as expected in every given 
situation

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


Let start testing:


Test-1 normal mode:

    >>> a = [ [1, 2], [3, 4] ]
    >>> b = [ [1, 2], [3, 4] ]
    >>> lazy_matrix_mul(a, b)
    [[ 7 10]
     [15 22]]


    >>> a = [ [1, 2] ]
    >>> b = [ [3, 4], [5, 6] ]
    >>> lazy_matrix_mul(a, b)
    [[13, 16]]


    >>> a = [  [1, 2, 3] ]
    >>> b = [ [4, 5, 6], [7, 8, 9], [10, 11, 12] ]
    >>> lazy_matrix_mul(a, b)
    [[48, 54, 60]]


    >>> print(lazy_matrix_mul("hello", [[1, 2]]))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead


    >>> print(lazy_matrix_mul([[1, 2]], "hello"))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead


    >>> print(lazy_matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported


    >>> print(lazy_matrix_mul(m_a))
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'


    >>> print(lazy_matrix_mul())
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments:


    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)


    >>> print(lazy_matrix_mul([[1, 2]], [3, 4]))
    [11]


    >>> print(lazy_matrix_mul([1, 2], [3, 4]))
    11


    >>> m_a = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> m_b = m_a
    >>> print(lazy_matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.